#!/bin/bashread -p "Enter slug: " _slugread -p "Enter admin password: " _admin_passwordread -p "Enter ACF PRO key (optional): " _acf_pro_key_url=http://localhost.${_slug}_dir_docker_wordpress=docker-wordpress_locale=pt_BRcomposer create-project roots/bedrock bedrock; composer installmv bedrock/* bedrock/.* ./rm -rf bedrockgit clone https://github.com/filipecsweb/docker-wordpress.git ${_dir_docker_wordpress}mv ./${_dir_docker_wordpress}/provision/Docker ./mv ./${_dir_docker_wordpress}/provision/.dockerignore ./mv ./${_dir_docker_wordpress}/provision/docker-compose.yaml ./sed -i '' -e "s/\$_SLUG/${_slug}/g" ./Docker/site.confrm -rf ${_dir_docker_wordpress}echo '# DOCKER' > ./.envecho "SLUG=${_slug}" >> ./.envecho "DOMAIN=localhost.${_slug}" >> ./.envecho "" >> ./.envecho "# BEDROCK" >> ./.envecho "DB_NAME=wp_${_slug}" >> ./.envecho "DB_USER=${_slug}" >> ./.envecho "DB_PASSWORD=victory" >> ./.envecho "DB_HOST=${_slug}_mariadb" >> ./.envecho "" >> ./.envecho "WP_ENV=development" >> ./.envecho "WP_HOME=${_url}" >> ./.envecho 'WP_SITEURL=${WP_HOME}/wp' >> ./.envecho "" >> ./.envecho '# Generate your keys here: https://roots.io/salts.html' >> ./.envecho "AUTH_KEY=$(curl -s -X GET https://helloacm.com/api/random/?n=64)" >> ./.envecho "SECURE_AUTH_KEY=$(curl -s -X GET https://helloacm.com/api/random/?n=64)" >> ./.envecho "LOGGED_IN_KEY=$(curl -s -X GET https://helloacm.com/api/random/?n=64)" >> ./.envecho "NONCE_KEY=$(curl -s -X GET https://helloacm.com/api/random/?n=64)" >> ./.envecho "AUTH_SALT=$(curl -s -X GET https://helloacm.com/api/random/?n=64)" >> ./.envecho "SECURE_AUTH_SALT=$(curl -s -X GET https://helloacm.com/api/random/?n=64)" >> ./.envecho "LOGGED_IN_SALT=$(curl -s -X GET https://helloacm.com/api/random/?n=64)" >> ./.envecho "NONCE_SALT=$(curl -s -X GET https://helloacm.com/api/random/?n=64)" >> ./.envdocker stop $(docker ps -q); docker-compose up -d --force-recreate && \docker exec -it "${_slug}_php" wp core download --locale=${_locale} --skip-content --force && \docker exec -it "${_slug}_php" wp core install --url=${_url} --title=Title --admin_user=filipe --admin_password=${_admin_password} --admin_email=filipecseabra@gmail.com --skip-email && \docker exec -it "${_slug}_php" wp rewrite flushdocker exec -it "${_slug}_php" wp language core install ${_locale}docker exec -it "${_slug}_php" wp site switch-language ${_locale}docker exec -it "${_slug}_php" wp language plugin update --alldocker exec -it "${_slug}_php" wp theme install storefront --activatedocker exec -it "${_slug}_php" wp language theme update --alldocker exec -it "${_slug}_php" wp plugin install adminimize --activatedocker exec -it "${_slug}_php" wp plugin install wp-sweep --activatedocker exec -it "${_slug}_php" wp plugin install acf-sidebar-selector-field --activatedocker exec -it "${_slug}_php" wp plugin install contact-form-7 --activatedocker exec -it "${_slug}_php" wp plugin install user-role-editor --activatedocker exec -it "${_slug}_php" wp plugin install seo-by-rank-math --activateif [${_acf_pro_key} != '']; then    docker exec -it "${_slug}_php" wp plugin install "http://connect.advancedcustomfields.com/index.php?p=pro&a=download&k=${_acf_pro_key}" --activatefidocker exec -it "${_slug}_php" wp post delete $(wp post list --post_type='post' --format=ids)docker exec -it "${_slug}_php" wp post delete $(wp post list --post_type='page' --format=ids)find ./web/wp/wp-content/themes/* -type d -exec rm -rf {} \;docker exec -it "${_slug}_php" wp eval-file wp-setup.php